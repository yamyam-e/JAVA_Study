package pmain;

//	수업 내용
//	1. 변수의 의미
//	2. 변수 선언 - 자료형 && 변수명
//	3. 변수 호출 - 형식 && 초기화 전 출력
//	4. 변수 초기화
//	5. 값의 저장(=)
//	6. 값의 변경
//	7. 프로그램 실행의 순차적 특성과 변수의 값 변경 특성
//	8. 변수의 추가 선언
//	9. 변수 이름 규칙
//	10. 변수 선언 및 초기화 동시 선언 형식
//	11. 여러개 변수 선언 형식


public class J04_Variable01 {
	
//	변수 : 데이터를 저장할 수 있는 메모리의 특정 공간
	
//	변수를 만들 때 필요한 조건 2가지
//	1. 타입 : 필요한 공간 생성 명령
//		- 종류 : int, double, float, char, String...
//	2. 변수명(변수 이름) : 만들어진 공간을 사용할 때 이용되는 이름
	
	public static void main(String[] args) {
		
		int a;
		
//		에러 :
//		System.out.println(int a);
//		=> 변수 호출 시 : 자료형 불필요
		
//		에러 :
//		System.out.println(a);
//		=> 초기화 없이 사용 불가능
		
		a = 30;
//		=> 저장 시 = 기호 이용
		System.out.println(a);
		System.out.println("1. a = " + a);
		
		
		a = 500;
		System.out.println("2. a = " + a);
//		=> 값의 변경 : 목적에 따른 명령의 위치 중요
		
		
//		int a;
//		=> 변수 추가 선언 시 : 같은 이름 사용 불가능
//		=> 변수 이름 선언 규칙 :
//			1. 영문자, 숫자 및 기호 _ $ 이용
//			2. 변수 첫글자는 소문자로 시작(카멜의 규칙)
//			3. 의미있는 새단어가 삽입되는 경우 대문자로 시작(카멜의 규칙)
//			4. 숫자로는 시작 불가능
//			5. 이미 사용중인 변수 이름은 불가능
//			6. 자바가 사용하는 단어 이용 불가능
//		=> 참고 : 카멜의 규칙
//			1. 변수 이름 및 메소드의 이름은 소문자로 시작
//			2. 클래스 이름은 대문자로 시작
//			3. 패키지 이름은 소문자로 시작
//			4. 의미있는 이름의 삽입이 이루어지는 경우 대문자로 시작(예: stuTestResult)
//			5. 상수는 모두 대문자로 지정
		
		int b;
		b = 2000;
		
		int c = 3000;
		
		int d, e, f;
		
//		참고 : final
//			- 값 변경 불가능(상수화 처리 작업)
		final int abc = 100;
//		에러 : abc = 50;
		
	}

}
