package pmain;

//	수업 내용
//	1. 배열 개념
//	2. 같은 자료형 배열
//	3. 배열 선언
//	4. for

public class J07_Array {
	public static void main(String[] args) {
		
//		배열 :
//			- 같은 형태의 데이터들을 묶은 특별한 구조의 저장 공간
//			- 배열은 객체 안에 존재하는 구조(new 키워드를 통한 객체 선언 필요)
//			- 구조적으로 묶을 갯수가 미리 지정되어야 한다.
//			- 갯수가 한번 정해지면 배열 구조는 프로그램 종료 전까지 변하지 않는다.
//			- 각 공간에는 자동으로 숫자(인덱스)가 부여되고, 무조건 처음 공간부터 0번으로 시작된다.
//			- 이용할 때 사용되는 기호 []는 레퍼런스연산자(.)를 포함하는 기호이므로 주의
//			- 객체 생성 시 자동으로 기본값을 가짐
		
		
//		기본 타입 배열
		
//		1. 배열의 선언
		
//		1-1. 정수 3개를 저장할 수 있는 배열 선언
		int[] i = new int[3];
		System.out.println("1-1. i = " + i);
		
		
//		1-2. 실수 4개를 저장할 수 있는 배열 선언
		double[] d = new double[4];
		System.out.println("1-2. d = " + d);
		
		
//		1-3. String 2개를 저장할 수 있는 배열 선언
		String[] s = new String[2];
		System.out.println("1-3. s = " + s);
		
		
		
//		2. 배열의 이용
//			- 배열을 이용할 때에는 공간번호인 인덱스를 이용해야 한다.
//			- 자동으로 부여된 인덱스는 0번부터 시작한다.
//			- 배열에 대한 레퍼런스를 이용할 때에는 레퍼런스연산자(.) 없이 [인덱스]를 이용
		
//		2-1. 배열 선언 시 저장된 기본값
		System.out.println("2-1. 저장된 기본값 확인");
		System.out.println("2-1. i[0] = " + i[0]);
		System.out.println("2-1. i[1] = " + i[1]);
		System.out.println("2-1. i[2] = " + i[2]);
		
		System.out.println("2-2. d[0] = " + d[0]);
		System.out.println("2-2. d[1] = " + d[1]);
		System.out.println("2-2. d[2] = " + d[2]);
		System.out.println("2-2. d[3] = " + d[3]);
		
		System.out.println("2-3. s[0] = " + s[0]);
		System.out.println("2-3. s[1] = " + s[1]);
		
		
//		주의 : 존재하지 않는 인덱스에 접근하는 경우
//		System.out.println(s[2]);
		
		
//		2-2. 데이터 저장
		i[2] = 10;
		d[3] = 1.1;
		s[1] = "가나다";
		
		
//		3. 기본 타입 형태 배열 초기화의 특별한 형식
//			- 기본 타입 형태의 배열에 대하여 저장하려는 값이 이미 정해진 경우,
//				다음과 같은 방법으로 선언 및 이용이 가능하다.
//				(여러개의 값을 저장할 때에는 저장하려는 값들을 중괄호로 묶고,
//					각 값들의 구분은 쉼표(,)로 표기한다.)
		
//			1. 객체 선언 형식(new ~)를 생략할 수 있다.
//			2. 객체 선언 형식(new ~)을 명시할 때에는 갯수를 명시해서는 안된다.
		
//		3-1. 객체 선언 형식 생략
		int[] i2 = {100, 200, 300};
		String[] s2 = {"가나다", "abc", "1234"};
		
//		3-2. 객체 선언 형식 명시
		double[] d2 = new double[] {1.1, 2.2};
		String[] s22 = new String[] {"이순신", "둘리", "과가"};
		
//		문제
//		1. 배열 선언, 저장 및 호출
//			- int, String && Joption
	}
}
