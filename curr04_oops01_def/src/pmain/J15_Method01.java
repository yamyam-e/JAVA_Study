package pmain;

//	수업 내용
//	1. 메소드
//	2. 메소드 작성

public class J15_Method01 {
	
//	메소드 :
//		- 사용도가 높은 기능을 가진 작은 프로그램 단위
	
//	메소드 작성(정의) 및 이용(호출) :
//		1. 메소드의 할 일(기능)을 정한다.
//		2. 메소드의 이름을 정한다.
//		3. 메소드의 틀을 입력한다.
//			형식 : 	void 메서드이름() {
//					
//					}
//			명칭과 의미 : 
//					void : 리턴타입 - "리턴자료형이 없다."라는 의미
//					( ) : 매개변수영역 - "매개변수가 없다."라는 의미
//					{ } : 메소드의 몸체body
//			참고 :
//				메인메소드와 동일한 클래스 내부에서 메소드를 작성하는 경우 형식
//					public static void 메소드이름() {
//					
//					}
//		4. 정해진 메소드의 기능에 따라 다음 2가지 내용을 파악한다.
//			- 복사 받아야 할 값이 있는가? (O/X)
//			- 복사해 주어야 할 값이 있는가? (O/X)
//		5. 복사 받아야 할 값이 있는 경우
//			입구(매개변수 영역)에 통로(매개변수)를 만든다.
//			통로는 바아야 할 값의 형태에 따라 만들고, 이름을 붙인다.
//		6. 복사해 주어야 할 값이 있는 경우
//			메소드의 몸체 마지막에서 [return 값;]을 입력한다.
//			출구(리턴자료형)에 복사할 값의 형태를 명시해서 출구를 열어야 한다.
//		7. 작성된 메소드를 호출할 때에는 이름 및 인자값을 명시해서 이용한다.
	
	
	public static void main(String[] args) {
		
		J15_People peo1 = new J15_People();
		setData(peo1, "둘리", 10);
		showData(peo1);
		
		J15_People peo2 = new J15_People();
	}

	private static void setData(J15_People gate1, String gate2, int gate3) {
		gate1.name = gate2;
		gate1.age = gate3;
	}
	
	private static void showData(J15_People gate) {
		System.out.println("이름 : " + gate.name + ", 나이 : " + gate.age);
	}
	
	
//	문제 : 자동차 정보 프로그램
//	1. 클래스 작성
//		- 이름, 엔진가격, 타이어가격, 최고속도, 총 구매가격(엔진가격+타이어가격)
//	2. 자동차 객체 2개 생성
//	3. 메소드 작성
//		1. 객체에 정보를 저장하는 메소드
//			- 총 구매가격은 자동 계산
//		2. 자동차 전체 정보를 출력하는 메소드
//		3. 두 자동차를 모두 구입했을 때 지불해야 할 금액을 알려주는 메소드 작성
//		4. 두 자동차 중 더 빠른 자동차의 구매가격을 출력하는 메소드 작성
	

}
